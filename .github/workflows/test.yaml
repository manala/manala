name: Test

on:
  pull_request:
  workflow_dispatch:

env:
  GO_VERSION: 1.20.2
  NODE_VERSION: 18
  GORELEASER_VERSION: 1.16.2
  GOLANGCI_LINT_VERSION: 1.52.2
  RICHGO_VERSION: 0.3.12

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-22.04
    permissions:
      # See: https://github.com/golangci/golangci-lint-action#how-to-use
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          # See: https://github.com/golangci/golangci-lint-action/pull/704
          cache: false
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v${{ env.GOLANGCI_LINT_VERSION }}
          # See: https://github.com/golangci/golangci-lint-action/issues/297
          args: --verbose --timeout 3m

  lint-web-ui:
    name: 'Lint WEB UI'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: "!github.event.pull_request || (!contains(github.event.pull_request.labels.*.name, 'WIP') && github.event.pull_request.draft == false)"
    env:
      working-directory: ./web/app
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      # https://github.com/actions/setup-node
      - name: 'Setup node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'Get npm cache directory'
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: lint-node-front-${{ hashFiles('front/**/package-lock.json') }}
          restore-keys: |
            lint-node-front-
      - name: 'Install dependencies'
        id: install
        run: make install@integration
      - name: 'ESLint front'
        if: always() && steps.install.outcome == 'success'
        run: make lint.eslint@integration
      - name: 'TypeScript check front'
        if: always() && steps.install.outcome == 'success'
        run: make lint.tsc@integration

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test
        env:
          RICHGO_FORCE_COLOR: 1
        run: |
          go install github.com/kyoh86/richgo@v${{ env.RICHGO_VERSION }}
          richgo test -v ./...

  build:
    name: Build
    needs:
      - lint
      - lint-web-ui
      - test
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # See: https://github.com/goreleaser/goreleaser-action#workflow
          fetch-depth: 0
      - name: Set up go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Goreleaser build
        uses: goreleaser/goreleaser-action@v4
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
        with:
          version: v${{ env.GORELEASER_VERSION }}
          args: >
            build --snapshot
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
          if-no-files-found: error
